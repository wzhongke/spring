<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 引入属性文件 -->
    <!--在 properties 元素体内指定的属性首先被读取。
        然后根据 properties 元素中的 resource 属性读取类路径下属性文件或根据 url 属性指定的路径读取属性文件，并覆盖已读取的同名属性。
        最后读取作为方法参数传递的属性，并覆盖已读取的同名属性。
    -->
    <properties resource="config.properties">
        <property name="username" value="wang"/>
        <property name="password" value="Wang@2018" />
    </properties>

    <settings>
        <setting name="cacheEnabled" value="true"/>
        <setting name="lazyLoadingEnabled" value="true" />
        <setting name="logImpl" value="STDOUT_LOGGING" />
    </settings>
    <!-- typeAliases typeHandlers 必须出现在 environments 之前 -->
    <typeAliases>
        <typeAlias alias="person" type="mybatis.data.Person"/>
    </typeAliases>

    <typeHandlers>
        <!-- 指定处理的 java 类型 和 jdbc 类型 -->
        <typeHandler handler="mybatis.handler.ExampleTypeHandler" jdbcType="VARCHAR" javaType="String" />
    </typeHandlers>

    <!-- 使用 xml 构建 SQLSessionFactory -->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${mysql}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 加载映射文件 mapper -->
   <mappers>
       <mapper resource="mybatis/UserMapper.xml"/>
   </mappers>
</configuration>